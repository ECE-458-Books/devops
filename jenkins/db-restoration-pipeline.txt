pipeline {
    agent any
    stages {
        stage('Backup database') {
            steps {
                sshagent(['books-db-key']) {
                    sh 'ssh -o StrictHostKeyChecking=no root@books-db.colab.duke.edu uptime'
                    sh 'scp /../../var/lib/jenkins/db-dumps/${dir}/${date}/${db}-dump-${date}.sql root@books-db.colab.duke.edu:/home/crs79/db-restore.sql'
                    sh 'scp -r /../../var/lib/jenkins/db-dumps/${dir}/${date}/books root@books-db.colab.duke.edu:/srv/media '
                    sh  """
                        echo "SSH and restore DB"
                        ssh -v root@books-db.colab.duke.edu <<EOF
                        dropdb ${db}
                        createdb ${db}
                        psql ${db} < /home/crs79/db-restore.sql
                        EOF
                    """.stripIndent()
                }
            }
        }
    }
    post {
        failure {
            slackSend(color: "danger", message: "${db} not successfully restored to the ${date} backup from the ${dir} directory")
        }
        success {
            slackSend(color: "good", message: "${db} successfully restored to the ${date} backup from the ${dir} directory")
        }
    }
}
